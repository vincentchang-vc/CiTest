/*
 * Generated by dtrace(1M).
 */

#ifndef	_DTRACE_AUTH_PROBES_H
#define	_DTRACE_AUTH_PROBES_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define V4SUBVERSION_STABILITY "___dtrace_stability$V4Subversion$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0"

#define V4SUBVERSION_TYPEDEFS "___dtrace_typedefs$V4Subversion$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	V4SUBVERSION_AUTH_KEYCHAIN_READ(arg0, arg1) \
do { \
	__asm__ volatile(".reference " V4SUBVERSION_TYPEDEFS); \
	__dtrace_probe$V4Subversion$auth_keychain_read$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " V4SUBVERSION_STABILITY); \
} while (0)
#define	V4SUBVERSION_AUTH_KEYCHAIN_READ_ENABLED() \
	({ int _r = __dtrace_isenabled$V4Subversion$auth_keychain_read$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	V4SUBVERSION_AUTH_KEYCHAIN_WRITE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " V4SUBVERSION_TYPEDEFS); \
	__dtrace_probe$V4Subversion$auth_keychain_write$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " V4SUBVERSION_STABILITY); \
} while (0)
#define	V4SUBVERSION_AUTH_KEYCHAIN_WRITE_ENABLED() \
	({ int _r = __dtrace_isenabled$V4Subversion$auth_keychain_write$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	V4SUBVERSION_AUTH_MEMCACHE_READ(arg0, arg1) \
do { \
	__asm__ volatile(".reference " V4SUBVERSION_TYPEDEFS); \
	__dtrace_probe$V4Subversion$auth_memcache_read$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " V4SUBVERSION_STABILITY); \
} while (0)
#define	V4SUBVERSION_AUTH_MEMCACHE_READ_ENABLED() \
	({ int _r = __dtrace_isenabled$V4Subversion$auth_memcache_read$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	V4SUBVERSION_AUTH_MEMCACHE_WRITE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " V4SUBVERSION_TYPEDEFS); \
	__dtrace_probe$V4Subversion$auth_memcache_write$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " V4SUBVERSION_STABILITY); \
} while (0)
#define	V4SUBVERSION_AUTH_MEMCACHE_WRITE_ENABLED() \
	({ int _r = __dtrace_isenabled$V4Subversion$auth_memcache_write$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$V4Subversion$auth_keychain_read$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$V4Subversion$auth_keychain_read$v1(void);
extern void __dtrace_probe$V4Subversion$auth_keychain_write$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$V4Subversion$auth_keychain_write$v1(void);
extern void __dtrace_probe$V4Subversion$auth_memcache_read$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$V4Subversion$auth_memcache_read$v1(void);
extern void __dtrace_probe$V4Subversion$auth_memcache_write$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$V4Subversion$auth_memcache_write$v1(void);

#else

#define	V4SUBVERSION_AUTH_KEYCHAIN_READ(arg0, arg1) \
do { \
	} while (0)
#define	V4SUBVERSION_AUTH_KEYCHAIN_READ_ENABLED() (0)
#define	V4SUBVERSION_AUTH_KEYCHAIN_WRITE(arg0, arg1) \
do { \
	} while (0)
#define	V4SUBVERSION_AUTH_KEYCHAIN_WRITE_ENABLED() (0)
#define	V4SUBVERSION_AUTH_MEMCACHE_READ(arg0, arg1) \
do { \
	} while (0)
#define	V4SUBVERSION_AUTH_MEMCACHE_READ_ENABLED() (0)
#define	V4SUBVERSION_AUTH_MEMCACHE_WRITE(arg0, arg1) \
do { \
	} while (0)
#define	V4SUBVERSION_AUTH_MEMCACHE_WRITE_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _DTRACE_AUTH_PROBES_H */
