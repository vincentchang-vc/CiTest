{
	id                        : 'latex';
	title                     : 'LaTeX';
	match:
	[ 
		extension								: 'tex',
	];

	rules: 
	[
		whitespace-rule:
		{
		},
		
		# End-of-line comment partition
		
		eol-rule:
		{
			id										: 'comment.singleline.latex';
			open-sequence					:	@'%';
		},
		
		# Rule for integral and non-integral numeric literals
		
		regex-rule:
		{
			id                    : 'literal.number.latex';
			case-insensitive      : no;
			pattern               : @'-?((\d+\.\d+)|(\d+\.)|(\.\d+)|(\d+))(em|ex|in|cm|mm|pt|pc|bp|dd|cc|sp|mu)';
		},

		# Rules for commands
		
		regex-rule:
		{
			id										: 'keyword.latex.command.matrix';
			pattern								: @'\\(left|right|big|Big|bigg|Bigg|bigl|bigr)[()\[\]|]';
		},

		regex-rule:
		{
			id										: 'keyword.latex.command';
			pattern								: @'\\([a-zA-Z0-9]|@)+\*?';
		},

		regex-rule:
		{
			id										: 'symbol.latex.equation.inline';
			multiline							: yes;
			pattern								: @'\$.*?\$';
			
			rules:
			[
				whitespace-rule:
				{
				},
				
				ref									: 'keyword.latex.command',
				regex-rule:
				{
					id								: 'keyword.latex.command.builtin.equation';
					pattern						: @'\\.';
				},
				
				default-rule:
				{
				},
			];
		},

		regex-rule:
		{
			id										: 'symbol.latex.equation.paragraph';
			multiline							: yes;
			pattern								: @'\\\[.*?\\\]';
			
			rules:
			[
				whitespace-rule:
				{
				},
				
				ref									: 'keyword.latex.command',
				regex-rule:
				{
					id								: 'keyword.latex.command.builtin.equation.paragraph';
					pattern						: @'\\.';
				},
				
				default-rule:
				{
				},
			];
		},

		regex-rule:
		{
			id										: 'symbol.latex.formula.inline';
			multiline							: yes;
			pattern								: @'\\\(.*?\\\)';
			
			rules:
			[
				whitespace-rule:
				{
				},
				
				ref									: 'keyword.latex.command',
				regex-rule:
				{
					id								: 'keyword.latex.command.builtin.formula';
					pattern						: @'\\.';
				},
				
				default-rule:
				{
				},
			];
		},

		regex-rule:
		{
			id										: 'keyword.latex.command.builtin';
			pattern								: @'\\.';
		},

		# Partition rules for command arguments
		
		regex-rule:
		{
			id										: 'default.latex.command.arguments';
			multiline							: yes;
			pattern								: @'{(?<content>(?<balanced>[^{}]|{\g<balanced>*})*)}';
			group									: 'content';
			
			rules:
			[
				whitespace-rule:
				{
				},
				
				ref									: 'comment.singleline.latex',
				ref									: 'keyword.latex.command',
				ref									: 'keyword.latex.command.builtin',
				ref									: 'symbol.latex.equation.inline',
				ref									: 'symbol.latex.equation.paragraph',
				ref									: 'literal.number.latex',
				ref									: 'default.latex.command.arguments',
				
				regex-rule:
				{
					id								: 'symbol.latex.argument';
					pattern						: @'#\d+';
				},
				
				default-rule:
				{
				},
			];
		},
		
		regex-rule:
		{
			id										: 'default.latex.command.arguments.optional';
			pattern								: @'\[(?<content>(?<balanced>[^\[\]]|{\g<balanced>*})*)\]';
			group									: 'content';
			
			rules:
			[
				whitespace-rule:
				{
				},
				
				ref									: 'keyword.latex.command',
				ref									: 'keyword.latex.command.builtin',
				ref									: 'literal.number.latex',
				ref									: 'default.latex.command.arguments',
				ref									: 'default.latex.command.arguments.optional',
				ref									: 'symbol.latex.equation.inline',
				ref									: 'symbol.latex.equation.paragraph',

				default-rule:
				{
				},
			];
		},

		# Rules for blocks
		
		regex-rule:
		{
			id										: 'keyword.latex.block.parenthesis';
			pattern								: @'\\\(.*?\\\)';
		},
				
		# Rule for double-quoted strings
		
		text-literal-rule:
		{
			id										: 'literal.string.latex.double-quoted';
			open-sequence					: '``';
			close-sequence				: "''";
			multiline							: yes;
		},

		default-rule:
		{
		}
	];
};
